<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<display-name>Archetype Created Web Application</display-name>

	<!-- To fix this exception, following context-params were added. org.jboss.as.server.deployment.DeploymentUnitProcessingException: 
		JBAS011232: Only one JAX-RS Application Class allowed. -->
	<context-param>
		<param-name>resteasy.scan</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>resteasy.scan.resources</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>resteasy.scan.providers</param-name>
		<param-value>false</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	
	<!-- log 4j added-->
	<context-param>
		 <param-name>log4jConfigLocation</param-name>
		 <param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- log 4j added-->
	
	<servlet>
		<servlet-name>jersey-serlvet</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>

		<!-- Application -->
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>com.oneassist.serviceplatform.webservice.App</param-value>
		</init-param>

		<!-- Register resources and providers under my.package. -->
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>
			    io.swagger.jaxrs.listing,
				com.oneassist.serviceplatform.webservice.resources,
				com.oneassist.serviceplatform.webservice.exceptionhandlers,
				com.oneassist.serviceplatform.webservice.security.filters
			</param-value>
		</init-param>
		<init-param>
		    <param-name>jersey.config.server.provider.classnames</param-name>
		    <param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>jersey-serlvet</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>
	
	<!-- Configuration for Swagger -->
     <servlet>
        <servlet-name>Jersey2Config</servlet-name>
        <servlet-class>io.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>
        <init-param>
            <param-name>api.version</param-name>
            <param-value>1.0.0</param-value>
        </init-param>
        <init-param>
            <param-name>swagger.api.basepath</param-name>
            <param-value>http://localhost:8080/serviceplatform.webservice/api</param-value>
        </init-param>
        <init-param>
            <param-name>title</param-name>
            <param-value>All about Service Platform</param-value>
        </init-param>
        
        <load-on-startup>2</load-on-startup>
    </servlet>
    
    <!-- Configuration for Spring Data Rest -->
	<servlet>
        <servlet-name>resources</servlet-name>
        <servlet-class>org.springframework.data.rest.webmvc.RepositoryRestDispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
 
    <servlet-mapping>
        <servlet-name>resources</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>
    
	<security-constraint>
        <web-resource-collection>
            <web-resource-name>Public Area</web-resource-name>
            <url-pattern>*.jpg</url-pattern>
             <http-method>GET</http-method>
        </web-resource-collection>
    </security-constraint>
</web-app>